# This is a template nginx config for INLOOP which is probably sufficient
# for 99% of all deployments. Adjust server_name and paths accordingly!

server {
    listen 443 ssl http2;
    server_name inloop.example.org;

    root /home/inloop/htdocs;

    ssl_certificate /etc/ssl/inloop/cert.pem;
    ssl_certificate_key /etc/ssl/inloop/key.pem;

    # send HTTP headers as outlined in the documentation for Django's
    # security middleware (e.g., HSTS headers)
    include secure_http_headers;

    gzip on;
    gzip_types text/plain text/css application/json application/javascript image/svg+xml;
    gzip_vary on;

    # serve static files directly with maximum cache lifetime
    location /static {
        gzip_static on;
        expires max;
    }

    location = /static/vendor/css/bootstrap.min.css.map {
        log_not_found off;
        return 404;
    }

    location = /static/vendor/css/bootstrap-theme.min.css.map {
        log_not_found off;
        return 404;
    }

    location = /favicon.ico {
        alias /home/inloop/htdocs/static/favicons/favicon.ico;
    }

    location = /apple-touch-icon.png {
        alias /home/inloop/htdocs/static/favicons/apple-touch-icon.png;
    }

    # protected location to serve uploaded files returned in the
    # X-Accel-Redirect header
    location /sendfile {
        internal;
        alias /var/lib/inloop/media;
    }

    # proxy everything else to Gunicorn
    location / {
        include gunicorn_proxy_params;
        proxy_pass http://127.0.0.1:8000;
    }
}

server {
    listen 80;
    server_name inloop.example.org;

    # redirect plain http to https
    return https://$server_name$request_uri;
}

## The two server sections below drop http(s) requests with invalid or
## missing Host: header. This filter is important, because Django raises
## SuspiciousOperation if the app receives a request for a hostname that
## is not configured in the ALLOWED_HOSTS setting. This in turn can lead
## to a _lot_ of unnecessary emails to the persons listed in the ADMINS
## setting (e.g., during scans with OpenVAS).

server {
    listen 443 ssl http2 default_server;
    server_name "";

    ssl_certificate /etc/ssl/inloop/cert.pem;
    ssl_certificate_key /etc/ssl/inloop/key.pem;

    return 444;
}

server {
    listen 80 default_server;
    server_name "";
    return 444;
}
